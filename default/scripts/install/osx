#!/usr/bin/env bash

printf "\033[0;92m[SCRIPT]\033[0;92m OSX configurator V1.0.0"
if [[ ${EUID} -eq 0 ]]; then
  printf "\r\033[0;91m[FAILED]\033[0m Running as sudo not supported"
fi

BM_USER=${USER}
if groups "${USER}" | grep -q "\bsudo\b"; then
  BM_USE_SUDO=1
fi

if groups "${USER}" | grep -q "\badmin\b"; then
  BM_USE_SUDO=1
fi

ARGS_BREW="--quiet"
FILE_CONTENT=
INSTALL_LIST=()
MD5_CURRENT=
MD5_NEW=
VERBOSE=0

if [[ "" == "$(command -v brew)" ]]; then
  printf "\033[0;31mbrew not found, aborting\033[0m\n"
  exit 1
fi

while getopts "sv" OPT; do
  case "${OPT}" in
    s)
      VERBOSE=-1
      ;;
    v)
      ARGS_BREW=
      VERBOSE=1
      ;;
    *)
      ;;
  esac
done

shift $((OPTIND-1))

[[ "${1:-}" = "--" ]] && shift

if [[ ! -d "/Users/${USER}/.npm_global" ]]; then
  if [[ "${VERBOSE}" == "1" ]]; then
    printf "\033[0;34mCreating npm_global\033[0m\n"
  fi

  mkdir -p "/Users/${USER}/.npm_global"
  chown -R ${USER}:staff "/Users/${USER}/.npm_global"
fi

if [[ "${VERBOSE}" != "-1" ]]; then
  printf "\033[0;32mAll commands have been executed\033[0m\n"
fi

if [[ "${USER}" != "root" ]]; then
  if [[ "" == "$(brew ls --versions md5sha1sum)" ]]; then
    INSTALL_LIST+=("md5sha1sum")
  fi

  if [[ "" == "$(brew ls --versions antigen)" ]]; then
    INSTALL_LIST+=("antigen")
  fi

  if [[ "" == "$(brew ls --versions python3)" ]]; then
    INSTALL_LIST+=("python3")
  fi

  if [[ "" == "$(brew ls --versions neovim)" ]]; then
    INSTALL_LIST+=("neovim")
  fi

  if [[ "" == "$(brew ls --versions nodejs)" ]]; then
    INSTALL_LIST+=("nodejs")
  fi

  if [[ "" == "$(brew ls --versions tmux)" ]]; then
    INSTALL_LIST+=("tmux")
  fi

  if [[ "" == "$(brew ls --versions zsh)" ]]; then
    INSTALL_LIST+=("zsh")
  fi

  INSTALL_LIST=($(printf "%s\n" "${INSTALL_LIST[@]}" | sort -u))
  if [[ "${INSTALL_LIST}" != "" ]]; then
    if [[ "${VERBOSE}" == "1" ]]; then
      printf "\033[0;31mMissing %s\033[0m\n" "${INSTALL_LIST[@]}"
      printf "\033[0;34mRunning brew update\033[0m\n"
    fi

    brew update ${ARGS_BREW}

    if [[ "${VERBOSE}" == "1" ]]; then
      printf "\033[0;34mRunning brew install\033[0m\n"
    fi

    brew install ${ARGS_BREW} ${INSTALL_LIST[@]}
  fi

  if [[ "${VERBOSE}" != "-1" ]]; then
    printf "\033[0;32mAll packages have been installed\033[0m\n"
  fi
fi

if [[ "" == "$(npm list -g neovim)" ]]; then
  if [[ "${VERBOSE}" == "1" ]]; then
    printf "\033[0;34mInstalling neovim [global]\033[0m\n"
  fi

  npm -g install neovim@latest &>/dev/null
fi

if [[ "${VERBOSE}" != "-1" ]]; then
  printf "\033[0;32mAll node packages have been installed\033[0m\n"
fi

if [[ "" == "$(python3 -m pip list | grep pynvim)" ]]; then
  if [[ "${VERBOSE}" == "1" ]]; then
    printf "\033[0;34mInstalling pynvim\033[0m\n"
  fi

  python3 -m pip install --upgrade pynvim &>/dev/null
fi

if [[ "${VERBOSE}" != "-1" ]]; then
  printf "\033[0;32mAll pip packages have been installed\033[0m\n"
fi

FILE_CONTENT="${USER} ALL=(ALL) NOPASSWD: ALL"
if [[ -f /etc/sudoers.d/90-${USER}-nopasswd ]]; then
  MD5_CURRENT=$(sudo md5sum /etc/sudoers.d/90-${USER}-nopasswd | awk '{ print $1 }')
  MD5_NEW=$(echo ${FILE_CONTENT} | md5sum | awk '{ print $1 }')
  if [[ "${MD5_CURRENT}" != "${MD5_NEW}" ]]; then
    if [[ "${VERBOSE}" == "1" ]]; then
      printf "\033[0;34mUpdating sudo users\033[0m\n"
      printf "\033[0;31mMD5 Mismatch ${MD5_CURRENT}/${MD5_NEW}\033[0m\n"
    fi

    sudo bash -c "echo \"${FILE_CONTENT}\" > /etc/sudoers.d/90-${USER}-nopasswd"
  fi
else
  if [[ "${VERBOSE}" == "1" ]]; then
    printf "\033[0;34mUpdating sudo users\033[0m\n"
  fi

  sudo bash -c "echo \"${FILE_CONTENT}\" > /etc/sudoers.d/90-${USER}-nopasswd"
fi

FILE_CONTENT="Defaults env_keep += \"TMUX\""
if [[ -f /etc/sudoers.d/50-keep-environment ]]; then
  MD5_CURRENT=$(sudo md5sum /etc/sudoers.d/50-keep-environment | awk '{ print $1 }')
  MD5_NEW=$(echo ${FILE_CONTENT} | md5sum | awk '{ print $1 }')
  if [[ "${MD5_CURRENT}" != "${MD5_NEW}" ]]; then
    if [[ "${VERBOSE}" == "1" ]]; then
      printf "\033[0;34mUpdating sudo environment\033[0m\n"
      printf "\033[0;31mMD5 Mismatch ${MD5_CURRENT}/${MD5_NEW}\033[0m\n"
    fi

    sudo echo ${FILE_CONTENT} > /etc/sudoers.d/50-keep-environment
  fi
else
  if [[ "${VERBOSE}" == "1" ]]; then
    printf "\033[0;34mUpdating sudo environment\033[0m\n"
  fi

  sudo echo ${FILE_CONTENT} > /etc/sudoers.d/50-keep-environment
fi

if [[ "$(which zsh)" != "$(dscl . -read /Users/${USER} UserShell | sed 's/UserShell: //')" ]]; then
  if [[ "${VERBOSE}" == "1" ]]; then
    printf "\033[0;34mUpdating shell [$USER]\033[0m\n"
  fi

  sudo chpass -s $(which zsh) ${USER} 2>&1 /dev/null
fi

sudo chmod -R 440 /etc/sudoers.d/*

if [[ "${VERBOSE}" != "-1" ]]; then
  printf "\033[0;32mAll commands have been executed\033[0m\n"
  printf "\033[0;32m\n==> All tasks executed successfully\033[0m\n"
fi

unset ARGS_BREW
unset ARGS_REDIRECT
unset FILE_CONTENT
unset INSTALL_LIST
unset MD5_CURRENT
unset MD5_NEW
unset SOURCES_ADDED
unset VERBOSE
